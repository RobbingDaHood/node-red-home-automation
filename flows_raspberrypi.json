[
    {
        "id": "1e529aea.122b55",
        "type": "tab",
        "label": "HumTemp",
        "disabled": true,
        "info": "Prototype backend for arduino project that would record Humidity and temperature. "
    },
    {
        "id": "ed98a99f.da5ee8",
        "type": "tab",
        "label": "TeraseEvents",
        "disabled": false,
        "info": "Record event for water on the terasse \n"
    },
    {
        "id": "c8d87243.5b455",
        "type": "tab",
        "label": "WeatherInfo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "48cbe9c.a428418",
        "type": "sqlitedb",
        "db": "/home/pi/databases/WeatherData.db",
        "mode": "RWC"
    },
    {
        "id": "dd94219d.f104d",
        "type": "sqlite",
        "z": "1e529aea.122b55",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "--DROP TABLE HumTempReads;\n\nCREATE TABLE HumTempReads (\n\tid INTEGER PRIMARY KEY,\n\tdevice_name TEXT NOT NULL,\n\thumidity REAL NOT NULL,\n\ttemperature REAL NOT NULL,\n\ttimestamp TEXT NOT NULL\n);",
        "name": "CreateHumTempTable",
        "x": 620,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "36fa9b1f.dc3944",
        "type": "inject",
        "z": "1e529aea.122b55",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "dd94219d.f104d"
            ]
        ]
    },
    {
        "id": "f07f4407.c66538",
        "type": "sqlite",
        "z": "1e529aea.122b55",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "Insert into HumTempReads\n(device_name, humidity, temperature, timestamp)\nvalues\n($device_name, $humidity, $temperature, $timestamp)\n",
        "name": "InsertIntoHumTempReads",
        "x": 990,
        "y": 460,
        "wires": [
            [
                "39eadd7.1c30c22"
            ]
        ]
    },
    {
        "id": "9f825e5e.14ab9",
        "type": "inject",
        "z": "1e529aea.122b55",
        "name": "TriggerRandomDevice",
        "props": [
            {
                "p": "payload.device_name",
                "v": "randomDevice",
                "vt": "str"
            },
            {
                "p": "payload.timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 380,
        "wires": [
            [
                "834df4c3.fa9868"
            ]
        ]
    },
    {
        "id": "47036527.c7764c",
        "type": "function",
        "z": "1e529aea.122b55",
        "name": "",
        "func": "msg.params = { \n    $device_name:msg.payload.device_name, \n    $humidity:msg.payload.humidity, \n    $temperature:msg.payload.temperature, \n    $timestamp:Date.now()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 460,
        "wires": [
            [
                "f07f4407.c66538",
                "dcd3bee3.733e7"
            ]
        ]
    },
    {
        "id": "834df4c3.fa9868",
        "type": "random",
        "z": "1e529aea.122b55",
        "name": "add humidity",
        "low": 1,
        "high": 10,
        "inte": "false",
        "property": "payload.humidity",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "1f6f5102.0203ef"
            ]
        ]
    },
    {
        "id": "1f6f5102.0203ef",
        "type": "random",
        "z": "1e529aea.122b55",
        "name": "add temperature",
        "low": 1,
        "high": 10,
        "inte": "false",
        "property": "payload.temperature",
        "x": 600,
        "y": 380,
        "wires": [
            [
                "47036527.c7764c",
                "4de5d624.843268"
            ]
        ]
    },
    {
        "id": "feb46d7b.86c73",
        "type": "sqlite",
        "z": "1e529aea.122b55",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "select * from HumTempReads;",
        "name": "ReadAllHumTempData",
        "x": 580,
        "y": 840,
        "wires": [
            [
                "2c587c94.b95be4",
                "a01d4383.d16c6"
            ]
        ]
    },
    {
        "id": "ccc1997.c397d68",
        "type": "inject",
        "z": "1e529aea.122b55",
        "name": "TriggerRead",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 340,
        "y": 780,
        "wires": [
            [
                "feb46d7b.86c73"
            ]
        ]
    },
    {
        "id": "2c587c94.b95be4",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "dcd3bee3.733e7",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "FunctionOutpu",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "ed3dbf37.5f0d4",
        "type": "http in",
        "z": "1e529aea.122b55",
        "name": "ReadAllHumTemp",
        "url": "/humtemp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 860,
        "wires": [
            [
                "feb46d7b.86c73"
            ]
        ]
    },
    {
        "id": "a01d4383.d16c6",
        "type": "http response",
        "z": "1e529aea.122b55",
        "name": "ResponseReadAllHumTemp",
        "statusCode": "200",
        "headers": {},
        "x": 930,
        "y": 880,
        "wires": []
    },
    {
        "id": "b6dd5cdd.4ec3a",
        "type": "http in",
        "z": "1e529aea.122b55",
        "name": "PostHumTemp",
        "url": "/humtemp",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "3f73ffa.0d61c",
                "45e4b167.17151"
            ]
        ]
    },
    {
        "id": "39eadd7.1c30c22",
        "type": "http response",
        "z": "1e529aea.122b55",
        "name": "ResponseHumTempPost",
        "statusCode": "201",
        "headers": {},
        "x": 1280,
        "y": 460,
        "wires": []
    },
    {
        "id": "3f73ffa.0d61c",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "PostRequest",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "45e4b167.17151",
        "type": "function",
        "z": "1e529aea.122b55",
        "name": "AddTimestampToPayload",
        "func": "msg.payload.timestamp = new Date()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 460,
        "wires": [
            [
                "47036527.c7764c",
                "4de5d624.843268"
            ]
        ]
    },
    {
        "id": "4de5d624.843268",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "FunctionInput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 300,
        "wires": []
    },
    {
        "id": "9c05f49c.3cefc8",
        "type": "comment",
        "z": "1e529aea.122b55",
        "name": "Curl post request that works. ",
        "info": "curl http://192.168.0.168:1880/humtemp --data '{\"device_name\": \"ManualPost\", \"humidity\": \"2.2\", \"temperature\": \"3.3\"}' -H \"Content-Type: application/json\"",
        "x": 180,
        "y": 500,
        "wires": []
    },
    {
        "id": "d39584c2.9cb068",
        "type": "comment",
        "z": "1e529aea.122b55",
        "name": "path",
        "info": "http://192.168.1.168:1880/humtemp",
        "x": 360,
        "y": 920,
        "wires": []
    },
    {
        "id": "40843669.ef8048",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "--DROP TABLE HumTempReads;\n\nCREATE TABLE TerasseEvents (\n\tid INTEGER PRIMARY KEY,\n\ttimestamp TEXT NOT NULL,\n\tdescription TEXT NOT NULL\n);",
        "name": "CreateTables",
        "x": 610,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3971b0a8.7ef97",
        "type": "inject",
        "z": "ed98a99f.da5ee8",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "40843669.ef8048"
            ]
        ]
    },
    {
        "id": "d3892e28.4cc73",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "Insert into TerasseEvents\n(description, timestamp)\nvalues\n($description, $timestamp)\n",
        "name": "InsertIntoHumTempReads",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "9581caf3.bb7b18",
                "cc5cd4a.45ed128"
            ]
        ]
    },
    {
        "id": "400880c0.dc1e3",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "func": "msg.params = { \n    $description:msg.payload.description, \n    $timestamp:Date.now()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 260,
        "wires": [
            [
                "d3892e28.4cc73",
                "cc5cd4a.45ed128"
            ]
        ]
    },
    {
        "id": "ac21427f.95294",
        "type": "http in",
        "z": "ed98a99f.da5ee8",
        "name": "PostTerasseEvent",
        "url": "/TerasseEvent",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "400880c0.dc1e3",
                "cc5cd4a.45ed128"
            ]
        ]
    },
    {
        "id": "9581caf3.bb7b18",
        "type": "http response",
        "z": "ed98a99f.da5ee8",
        "name": "ResponseHumTempPost",
        "statusCode": "201",
        "headers": {},
        "x": 1260,
        "y": 260,
        "wires": []
    },
    {
        "id": "57034326.6c6f6c",
        "type": "comment",
        "z": "ed98a99f.da5ee8",
        "name": "Curl post request that works. ",
        "info": "curl http://192.168.1.168:1880/TerasseEvent --data '{\"description\": \"DWP: Sydlig\", \"timestamp\": \"1617382318584.0\"}' -H \"Content-Type: application/json\"",
        "x": 200,
        "y": 300,
        "wires": []
    },
    {
        "id": "cc5cd4a.45ed128",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 400,
        "wires": []
    },
    {
        "id": "9bfb55cf.f3d3c8",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "select * from TerasseEvents;",
        "name": "ReadAllHumTempData",
        "x": 400,
        "y": 460,
        "wires": [
            [
                "10d48702.6f0009"
            ]
        ]
    },
    {
        "id": "b9070b3.8a923f8",
        "type": "http in",
        "z": "ed98a99f.da5ee8",
        "name": "ReadTerasseEvent",
        "url": "/TerasseEvent",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "9bfb55cf.f3d3c8"
            ]
        ]
    },
    {
        "id": "10d48702.6f0009",
        "type": "http response",
        "z": "ed98a99f.da5ee8",
        "name": "ResponseReadAllTerasseEvent",
        "statusCode": "200",
        "headers": {},
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "614520f1.788b2",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "winddir",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/winddir/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 400,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "6462301d.26ae7",
        "type": "http in",
        "z": "c8d87243.5b455",
        "name": "/WeatherInMonth/:year/:month",
        "url": "/WeatherInMonth/:year/:month",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "1a618cda.094b43",
                "a9add6a3.57bc98"
            ]
        ]
    },
    {
        "id": "d6bcada7.60c2d",
        "type": "inject",
        "z": "c8d87243.5b455",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "384ff88.60b8808"
            ]
        ]
    },
    {
        "id": "aee65909.1a9838",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "wind",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/wind/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 780,
        "wires": [
            [
                "d4e6f2c3.30ea4"
            ]
        ]
    },
    {
        "id": "34a7eaa1.ba1806",
        "type": "join",
        "z": "c8d87243.5b455",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3450,
        "y": 420,
        "wires": [
            [
                "81c3aa6b.2be498",
                "75749e4c.9f02c"
            ]
        ]
    },
    {
        "id": "81c3aa6b.2be498",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3450,
        "y": 380,
        "wires": []
    },
    {
        "id": "d4e6f2c3.30ea4",
        "type": "splitter",
        "z": "c8d87243.5b455",
        "name": "Split parameters",
        "property": "payload",
        "x": 3260,
        "y": 780,
        "wires": [
            [
                "e63c9366.4d864",
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "e63c9366.4d864",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "split",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 740,
        "wires": []
    },
    {
        "id": "b5421f0f.7b8dd",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MapRelevantFields",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3670,
        "y": 380,
        "wires": []
    },
    {
        "id": "75749e4c.9f02c",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "MapRelevantFields",
        "func": "newpayload = []\n\nfor (var datsets of msg.payload) {\n    newDataserie = [];\n\n    for (var data of datsets.dataserie) {\n        newDataserie.push(\n            {\n                timestamp: data.dateString,\n                value: data.valueOneDecimal\n            }\n        )\n    }\n    \n    \n    newpayload.push(\n        {\n            dataserie:newDataserie,\n            unit:datsets.unit, \n            parameter:datsets.parameter\n        }\n    )\n    \n}\n\nmsg.payload = newpayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3670,
        "y": 420,
        "wires": [
            [
                "b5421f0f.7b8dd",
                "cac33495.445fd8",
                "d431fb0f.f51ef8"
            ]
        ]
    },
    {
        "id": "384ff88.60b8808",
        "type": "template",
        "z": "c8d87243.5b455",
        "name": "req.params",
        "field": "req.params",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"month\":\"01\",\n    \"year\":\"2021\"\n}",
        "output": "json",
        "x": 310,
        "y": 300,
        "wires": [
            [
                "a9add6a3.57bc98"
            ]
        ]
    },
    {
        "id": "1a618cda.094b43",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "/WeatherInMonth/:year/:month",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 420,
        "wires": []
    },
    {
        "id": "f600a5ea.c18888",
        "type": "comment",
        "z": "c8d87243.5b455",
        "name": "http://192.168.0.168:1880/WeatherInMonth/2021/03",
        "info": "http://192.168.0.168:1880/WeatherInMonth/2021/03",
        "x": 240,
        "y": 560,
        "wires": []
    },
    {
        "id": "3e075f2c.9278c",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "IsPayloadNotEmpty",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "e95010b9.4bcca",
                "f74965e.3dd8498"
            ],
            [
                "eaf2fb8c.359798"
            ]
        ]
    },
    {
        "id": "9f4ee817.ad35b8",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "\nCREATE TABLE WeatherData (\n\tyearmonth TEXT NOT NULL PRIMARY KEY,\n\tdata TEXT NOT NULL,\n\ttimestamp TEXT NOT NULL\n);",
        "name": "CreateTables",
        "x": 910,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5d8e7a0.ce7eb88",
        "type": "inject",
        "z": "c8d87243.5b455",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "9f4ee817.ad35b8"
            ]
        ]
    },
    {
        "id": "82bc81ea.4c191",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "REPLACE into WeatherData\n(yearmonth, data, timestamp)\nvalues\n($yearmonth, $data, $timestamp)\n\n",
        "name": "InsertIntoWeatherData",
        "x": 4120,
        "y": 480,
        "wires": [
            [
                "a72db7d8.5dce68"
            ]
        ]
    },
    {
        "id": "cac33495.445fd8",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "MapToDB",
        "func": "msg.params = { \n    $yearmonth:msg.payload[0].dataserie[0].timestamp.substr(3,7), \n    $data:JSON.stringify(msg.payload),\n    $timestamp:new Date()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3880,
        "y": 480,
        "wires": [
            [
                "d85bad1e.758d5",
                "82bc81ea.4c191"
            ]
        ]
    },
    {
        "id": "d85bad1e.758d5",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MapToDB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3890,
        "y": 440,
        "wires": []
    },
    {
        "id": "a72db7d8.5dce68",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "InsertIntoWeatherData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4120,
        "y": 440,
        "wires": []
    },
    {
        "id": "c80902c.8798a",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "--DROP TABLE WeatherData;\n",
        "name": "DropTables",
        "x": 910,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "12588774.00edd9",
        "type": "inject",
        "z": "c8d87243.5b455",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "c80902c.8798a"
            ]
        ]
    },
    {
        "id": "307dc01.39d614",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "select * from WeatherData\nwhere yearmonth = $yearmonth;\n\n",
        "name": "ReadWeatherData",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "3e075f2c.9278c",
                "cc962859.3d7cf8"
            ]
        ]
    },
    {
        "id": "a9add6a3.57bc98",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "ConstructYearMonth",
        "func": "msg.params =  {\n    $yearmonth: msg.req.params.month + \"-\" + msg.req.params.year\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "307dc01.39d614",
                "af66b959.f86db8"
            ]
        ]
    },
    {
        "id": "af66b959.f86db8",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "ConstructYearMonth",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 260,
        "wires": []
    },
    {
        "id": "cc962859.3d7cf8",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "ReadWeatherData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "d431fb0f.f51ef8",
        "type": "http response",
        "z": "c8d87243.5b455",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3910,
        "y": 20,
        "wires": []
    },
    {
        "id": "98bccf06.c4571",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MapToResponse",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 240,
        "wires": []
    },
    {
        "id": "eaf2fb8c.359798",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "TranslateMonth",
        "func": "newMonth = \"\"\n\nswitch (msg.req.params.month) {\n    case \"01\": newMonth = \"Januar\"; break;\n    case \"02\": newMonth = \"Februar\"; break;\n    case \"03\": newMonth = \"Marts\"; break;\n    case \"04\": newMonth = \"April\"; break;\n    case \"05\": newMonth = \"Maj\"; break;\n    case \"06\": newMonth = \"Juni\"; break;\n    case \"07\": newMonth = \"Juli\"; break;\n    case \"08\": newMonth = \"August\"; break;\n    case \"09\": newMonth = \"September\"; break;\n    case \"10\": newMonth = \"Oktober\"; break;\n    case \"11\": newMonth = \"November\"; break;\n    case \"12\": newMonth = \"December\"; break;\n}\n\nmsg.req.params.monthDKString = newMonth\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2840,
        "y": 560,
        "wires": [
            [
                "614520f1.788b2",
                "aee65909.1a9838",
                "2939a5dc.31a41a",
                "4bbfe53a.6dfddc",
                "3e65897b.2f3ac6",
                "cf893fc4.d5d3e",
                "55cc196b.673938",
                "9bed92fd.bcef9",
                "e56e8c63.843eb",
                "a4fe8d50.55605",
                "7de8c9ee.3e75b8"
            ]
        ]
    },
    {
        "id": "2939a5dc.31a41a",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "TranslateMonth",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2840,
        "y": 520,
        "wires": []
    },
    {
        "id": "f74965e.3dd8498",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "MapToResponse",
        "func": "msg.payload = {\n    yearmonth:msg.payload[0].yearmonth,\n    timestamp:new Date(parseInt(msg.payload[0].timestamp)),\n    data:JSON.parse(msg.payload[0].data),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 280,
        "wires": [
            [
                "98bccf06.c4571"
            ]
        ]
    },
    {
        "id": "e95010b9.4bcca",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "PayloadIsNotEmpty",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "4bbfe53a.6dfddc",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "temperature",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/temperature/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3090,
        "y": 820,
        "wires": [
            [
                "d4e6f2c3.30ea4"
            ]
        ]
    },
    {
        "id": "3e65897b.2f3ac6",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "snow",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/snow/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 440,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "cf893fc4.d5d3e",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "lightning",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/lightning/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 480,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "55cc196b.673938",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "drought",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/drought/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 520,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "9bed92fd.bcef9",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "sunhours",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/sunhours/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 560,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "e56e8c63.843eb",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "humidity",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/humidity/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 600,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "a4fe8d50.55605",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "pressure",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/pressure/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 640,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "7de8c9ee.3e75b8",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "precip",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/precip/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 680,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "ef7a27bb.3a2398",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddcurrentTime",
        "func": "msg.params.currentTime = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2360,
        "y": 280,
        "wires": [
            [
                "cc87e5c3.f205e8"
            ]
        ]
    },
    {
        "id": "fed7ebc0.01e078",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddeMaxdate",
        "func": "var maxDate = new Date(0,0,0);\n\nfor (var data of msg.payload.data[0].dataserie) {\n    const dateString = data.timestamp;\n    //node.warn(dateString);\n    day = dateString.substring(0,2);\n    month = dateString.substring(3,5);\n    year = dateString.substring(6,10);\n    //node.warn(day + \"-\" + month + \"-\" + year);\n    var currentDate = new Date(year, month-1, day, 23, 59, 59);\n    \n   // node.warn(currentDate);\n    \n    if (maxDate < currentDate) maxDate = currentDate;\n}\n\n\nmsg.params.maxDate = maxDate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1560,
        "y": 280,
        "wires": [
            [
                "a80b304e.f0668"
            ]
        ]
    },
    {
        "id": "cb67dabc.2a2198",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "IsMaxDateLastDayOfMonth",
        "property": "params.maxDate.getTime()",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "params.lastDayOfMaxDateMonth.getTime()",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2100,
        "y": 280,
        "wires": [
            [
                "d431fb0f.f51ef8"
            ],
            [
                "ef7a27bb.3a2398"
            ]
        ]
    },
    {
        "id": "a80b304e.f0668",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddMaxDayOfMonth",
        "func": "var maxDate = msg.params.maxDate;\nvar lastDayOfMonth = new Date(maxDate.getFullYear(), maxDate.getMonth()+1, 0, 23,59.59, 59);\nmsg.params.lastDayOfMaxDateMonth = lastDayOfMonth;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 280,
        "wires": [
            [
                "cb67dabc.2a2198",
                "69447d60.674404"
            ]
        ]
    },
    {
        "id": "69447d60.674404",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "AddMaxDayOfMonth",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1820,
        "y": 240,
        "wires": []
    },
    {
        "id": "cc87e5c3.f205e8",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "IsMaxDateToday",
        "property": "params.currentTime.getTime()",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "params.maxDate.getTime()",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2590,
        "y": 280,
        "wires": [
            [
                "d431fb0f.f51ef8"
            ],
            [
                "eaf2fb8c.359798"
            ]
        ]
    }
]