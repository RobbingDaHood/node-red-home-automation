[
    {
        "id": "1e529aea.122b55",
        "type": "tab",
        "label": "HumTemp",
        "disabled": true,
        "info": "Prototype backend for arduino project that would record Humidity and temperature. "
    },
    {
        "id": "ed98a99f.da5ee8",
        "type": "tab",
        "label": "TeraseEvents",
        "disabled": false,
        "info": "Record event for water on the terasse \n"
    },
    {
        "id": "c8d87243.5b455",
        "type": "tab",
        "label": "WeatherInfo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5d962ba5.9b5bc4",
        "type": "tab",
        "label": "Dashboard - Main Menu",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3dfdec7a.a1b244",
        "type": "tab",
        "label": "Dashboard - TerasseEvent",
        "disabled": false,
        "info": ""
    },
    {
        "id": "48cbe9c.a428418",
        "type": "sqlitedb",
        "db": "/home/pi/databases/WeatherData.db",
        "mode": "RWC"
    },
    {
        "id": "4f1f6911.3116a8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 200,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "dd0b04aa.9ebc28",
        "type": "ui_group",
        "name": "Menu",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c5e66d02.079ab",
        "type": "ui_group",
        "name": "Testing",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "483b3a40.22ca24",
        "type": "ui_tab",
        "name": "TerasseEventData",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "17d43085.90b03f",
        "type": "ui_group",
        "name": "DataPresenter",
        "tab": "483b3a40.22ca24",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1ed11c7.232e364",
        "type": "ui_group",
        "name": "Dynamic table example",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "86228.687a5dd88",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dd94219d.f104d",
        "type": "sqlite",
        "z": "1e529aea.122b55",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "--DROP TABLE HumTempReads;\n\nCREATE TABLE HumTempReads (\n\tid INTEGER PRIMARY KEY,\n\tdevice_name TEXT NOT NULL,\n\thumidity REAL NOT NULL,\n\ttemperature REAL NOT NULL,\n\ttimestamp TEXT NOT NULL\n);",
        "name": "CreateHumTempTable",
        "x": 620,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "36fa9b1f.dc3944",
        "type": "inject",
        "z": "1e529aea.122b55",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "dd94219d.f104d"
            ]
        ]
    },
    {
        "id": "f07f4407.c66538",
        "type": "sqlite",
        "z": "1e529aea.122b55",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "Insert into HumTempReads\n(device_name, humidity, temperature, timestamp)\nvalues\n($device_name, $humidity, $temperature, $timestamp)\n",
        "name": "InsertIntoHumTempReads",
        "x": 990,
        "y": 460,
        "wires": [
            [
                "39eadd7.1c30c22"
            ]
        ]
    },
    {
        "id": "9f825e5e.14ab9",
        "type": "inject",
        "z": "1e529aea.122b55",
        "name": "TriggerRandomDevice",
        "props": [
            {
                "p": "payload.device_name",
                "v": "randomDevice",
                "vt": "str"
            },
            {
                "p": "payload.timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 380,
        "wires": [
            [
                "834df4c3.fa9868"
            ]
        ]
    },
    {
        "id": "47036527.c7764c",
        "type": "function",
        "z": "1e529aea.122b55",
        "name": "",
        "func": "msg.params = { \n    $device_name:msg.payload.device_name, \n    $humidity:msg.payload.humidity, \n    $temperature:msg.payload.temperature, \n    $timestamp:Date.now()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 460,
        "wires": [
            [
                "f07f4407.c66538",
                "dcd3bee3.733e7"
            ]
        ]
    },
    {
        "id": "834df4c3.fa9868",
        "type": "random",
        "z": "1e529aea.122b55",
        "name": "add humidity",
        "low": 1,
        "high": 10,
        "inte": "false",
        "property": "payload.humidity",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "1f6f5102.0203ef"
            ]
        ]
    },
    {
        "id": "1f6f5102.0203ef",
        "type": "random",
        "z": "1e529aea.122b55",
        "name": "add temperature",
        "low": 1,
        "high": 10,
        "inte": "false",
        "property": "payload.temperature",
        "x": 600,
        "y": 380,
        "wires": [
            [
                "47036527.c7764c",
                "4de5d624.843268"
            ]
        ]
    },
    {
        "id": "feb46d7b.86c73",
        "type": "sqlite",
        "z": "1e529aea.122b55",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "select * from HumTempReads;",
        "name": "ReadAllHumTempData",
        "x": 580,
        "y": 840,
        "wires": [
            [
                "2c587c94.b95be4",
                "a01d4383.d16c6"
            ]
        ]
    },
    {
        "id": "ccc1997.c397d68",
        "type": "inject",
        "z": "1e529aea.122b55",
        "name": "TriggerRead",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 340,
        "y": 780,
        "wires": [
            [
                "feb46d7b.86c73"
            ]
        ]
    },
    {
        "id": "2c587c94.b95be4",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "dcd3bee3.733e7",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "FunctionOutpu",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "ed3dbf37.5f0d4",
        "type": "http in",
        "z": "1e529aea.122b55",
        "name": "ReadAllHumTemp",
        "url": "/humtemp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 860,
        "wires": [
            [
                "feb46d7b.86c73"
            ]
        ]
    },
    {
        "id": "a01d4383.d16c6",
        "type": "http response",
        "z": "1e529aea.122b55",
        "name": "ResponseReadAllHumTemp",
        "statusCode": "200",
        "headers": {},
        "x": 930,
        "y": 880,
        "wires": []
    },
    {
        "id": "b6dd5cdd.4ec3a",
        "type": "http in",
        "z": "1e529aea.122b55",
        "name": "PostHumTemp",
        "url": "/humtemp",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "3f73ffa.0d61c",
                "45e4b167.17151"
            ]
        ]
    },
    {
        "id": "39eadd7.1c30c22",
        "type": "http response",
        "z": "1e529aea.122b55",
        "name": "ResponseHumTempPost",
        "statusCode": "201",
        "headers": {},
        "x": 1280,
        "y": 460,
        "wires": []
    },
    {
        "id": "3f73ffa.0d61c",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "PostRequest",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "45e4b167.17151",
        "type": "function",
        "z": "1e529aea.122b55",
        "name": "AddTimestampToPayload",
        "func": "msg.payload.timestamp = new Date()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 460,
        "wires": [
            [
                "47036527.c7764c",
                "4de5d624.843268"
            ]
        ]
    },
    {
        "id": "4de5d624.843268",
        "type": "debug",
        "z": "1e529aea.122b55",
        "name": "FunctionInput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 300,
        "wires": []
    },
    {
        "id": "9c05f49c.3cefc8",
        "type": "comment",
        "z": "1e529aea.122b55",
        "name": "Curl post request that works. ",
        "info": "curl http://192.168.0.168:1880/humtemp --data '{\"device_name\": \"ManualPost\", \"humidity\": \"2.2\", \"temperature\": \"3.3\"}' -H \"Content-Type: application/json\"",
        "x": 180,
        "y": 500,
        "wires": []
    },
    {
        "id": "d39584c2.9cb068",
        "type": "comment",
        "z": "1e529aea.122b55",
        "name": "path",
        "info": "http://192.168.1.168:1880/humtemp",
        "x": 360,
        "y": 920,
        "wires": []
    },
    {
        "id": "40843669.ef8048",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "--DROP TABLE TerasseEvents;\n",
        "name": "DropTables",
        "x": 610,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3971b0a8.7ef97",
        "type": "inject",
        "z": "ed98a99f.da5ee8",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "40843669.ef8048"
            ]
        ]
    },
    {
        "id": "d3892e28.4cc73",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "Insert into TerasseEvents\n(description, timestamp)\nvalues\n($description, $timestamp)\n",
        "name": "InsertIntoHumTempReads",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "9581caf3.bb7b18",
                "cc5cd4a.45ed128"
            ]
        ]
    },
    {
        "id": "400880c0.dc1e3",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "func": "msg.params = { \n    $description:msg.payload.description, \n    $timestamp:msg.payload.timestamp\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 260,
        "wires": [
            [
                "d3892e28.4cc73",
                "cc5cd4a.45ed128"
            ]
        ]
    },
    {
        "id": "ac21427f.95294",
        "type": "http in",
        "z": "ed98a99f.da5ee8",
        "name": "PostTerasseEvent",
        "url": "/TerasseEvent",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "400880c0.dc1e3",
                "cc5cd4a.45ed128"
            ]
        ]
    },
    {
        "id": "9581caf3.bb7b18",
        "type": "http response",
        "z": "ed98a99f.da5ee8",
        "name": "ResponseHumTempPost",
        "statusCode": "201",
        "headers": {},
        "x": 1260,
        "y": 260,
        "wires": []
    },
    {
        "id": "57034326.6c6f6c",
        "type": "comment",
        "z": "ed98a99f.da5ee8",
        "name": "Curl post request that works. ",
        "info": "curl http://192.168.1.168:1880/TerasseEvent --data '{\"description\": \"DWP: Sydlig\", \"timestamp\": \"1617382318584.0\"}' -H \"Content-Type: application/json\"",
        "x": 200,
        "y": 300,
        "wires": []
    },
    {
        "id": "cc5cd4a.45ed128",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 400,
        "wires": []
    },
    {
        "id": "9bfb55cf.f3d3c8",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "select * from TerasseEvents;",
        "name": "ReadAllHumTempData",
        "x": 400,
        "y": 460,
        "wires": [
            [
                "10d48702.6f0009"
            ]
        ]
    },
    {
        "id": "b9070b3.8a923f8",
        "type": "http in",
        "z": "ed98a99f.da5ee8",
        "name": "ReadTerasseEvent",
        "url": "/TerasseEvent",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "9bfb55cf.f3d3c8"
            ]
        ]
    },
    {
        "id": "10d48702.6f0009",
        "type": "http response",
        "z": "ed98a99f.da5ee8",
        "name": "ResponseReadAllTerasseEvent",
        "statusCode": "200",
        "headers": {},
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "614520f1.788b2",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "winddir",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/winddir/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 400,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "6462301d.26ae7",
        "type": "http in",
        "z": "c8d87243.5b455",
        "name": "/WeatherInMonth/:year/:month",
        "url": "/WeatherInMonth/:year/:month",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "1a618cda.094b43",
                "a9add6a3.57bc98"
            ]
        ]
    },
    {
        "id": "d6bcada7.60c2d",
        "type": "inject",
        "z": "c8d87243.5b455",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "384ff88.60b8808",
                "1478120e.81bf9e"
            ]
        ]
    },
    {
        "id": "aee65909.1a9838",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "wind",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/wind/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 780,
        "wires": [
            [
                "d4e6f2c3.30ea4"
            ]
        ]
    },
    {
        "id": "34a7eaa1.ba1806",
        "type": "join",
        "z": "c8d87243.5b455",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "14",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3450,
        "y": 420,
        "wires": [
            [
                "81c3aa6b.2be498",
                "75749e4c.9f02c",
                "9b5e530e.f84cd"
            ]
        ]
    },
    {
        "id": "81c3aa6b.2be498",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3450,
        "y": 380,
        "wires": []
    },
    {
        "id": "d4e6f2c3.30ea4",
        "type": "splitter",
        "z": "c8d87243.5b455",
        "name": "Split parameters",
        "property": "payload",
        "x": 3260,
        "y": 780,
        "wires": [
            [
                "e63c9366.4d864",
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "e63c9366.4d864",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "split",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 740,
        "wires": []
    },
    {
        "id": "b5421f0f.7b8dd",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MapRelevantFields",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3670,
        "y": 380,
        "wires": []
    },
    {
        "id": "75749e4c.9f02c",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "MapRelevantFields",
        "func": "newDatasets = [];\n\nfor (var dataset of msg.payload) {\n    newDataserie = [];\n\n    for (var data of dataset.dataserie) {\n        newDataserie.push(\n            {\n                timestamp: data.time,\n                value: data.valueOneDecimal\n            }\n        )\n    }\n    \n    newDatasets.push({\n        dataserie:newDataserie,\n        unit:dataset.unit, \n        parameter:dataset.parameter\n    })\n}\n\nmsg.payload = {\n    data:newDatasets\n}\n        \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3670,
        "y": 420,
        "wires": [
            [
                "b5421f0f.7b8dd",
                "10990da9.dc23f2"
            ]
        ]
    },
    {
        "id": "384ff88.60b8808",
        "type": "template",
        "z": "c8d87243.5b455",
        "name": "req.params",
        "field": "req.params",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"month\":\"03\",\n    \"year\":\"2021\"\n}",
        "output": "json",
        "x": 310,
        "y": 300,
        "wires": [
            [
                "a9add6a3.57bc98"
            ]
        ]
    },
    {
        "id": "1a618cda.094b43",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "/WeatherInMonth/:year/:month",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 420,
        "wires": []
    },
    {
        "id": "f600a5ea.c18888",
        "type": "comment",
        "z": "c8d87243.5b455",
        "name": "http://192.168.0.168:1880/WeatherInMonth/2021/03",
        "info": "http://192.168.0.168:1880/WeatherInMonth/2021/03",
        "x": 230,
        "y": 460,
        "wires": []
    },
    {
        "id": "3e075f2c.9278c",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "IsPayloadNotEmpty",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "e95010b9.4bcca",
                "4024f3d5.9c894c"
            ],
            [
                "eaf2fb8c.359798"
            ]
        ]
    },
    {
        "id": "9f4ee817.ad35b8",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "\nCREATE TABLE WeatherData (\n\tyearmonth TEXT NOT NULL PRIMARY KEY,\n\tdata TEXT NOT NULL,\n\ttimestamp TEXT NOT NULL\n);",
        "name": "CreateTables",
        "x": 910,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5d8e7a0.ce7eb88",
        "type": "inject",
        "z": "c8d87243.5b455",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "9f4ee817.ad35b8"
            ]
        ]
    },
    {
        "id": "82bc81ea.4c191",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "REPLACE into WeatherData\n(yearmonth, data, timestamp)\nvalues\n($yearMonth, $data, $timestamp)\n\n",
        "name": "InsertIntoWeatherData",
        "x": 4600,
        "y": 500,
        "wires": [
            [
                "a72db7d8.5dce68"
            ]
        ]
    },
    {
        "id": "cac33495.445fd8",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "MapToDB",
        "func": "msg.params = {\n    $data : JSON.stringify(msg.payload.data),\n    $yearMonth : msg.payload.yearMonth,\n    $timestamp : msg.payload.timestamp\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4360,
        "y": 500,
        "wires": [
            [
                "d85bad1e.758d5",
                "82bc81ea.4c191"
            ]
        ]
    },
    {
        "id": "d85bad1e.758d5",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MapToDB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4370,
        "y": 460,
        "wires": []
    },
    {
        "id": "a72db7d8.5dce68",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "InsertIntoWeatherData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4600,
        "y": 460,
        "wires": []
    },
    {
        "id": "c80902c.8798a",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "DROP TABLE WeatherData;\n",
        "name": "DropTables",
        "x": 910,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "12588774.00edd9",
        "type": "inject",
        "z": "c8d87243.5b455",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "c80902c.8798a"
            ]
        ]
    },
    {
        "id": "307dc01.39d614",
        "type": "sqlite",
        "z": "c8d87243.5b455",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "prepared",
        "sql": "select * from WeatherData\nwhere yearmonth = $yearmonth;\n\n",
        "name": "ReadWeatherData",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "3e075f2c.9278c",
                "cc962859.3d7cf8"
            ]
        ]
    },
    {
        "id": "a9add6a3.57bc98",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "ConstructYearMonth",
        "func": "msg.params =  {\n    $yearmonth: msg.req.params.year + \"-\" + msg.req.params.month\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "307dc01.39d614",
                "af66b959.f86db8"
            ]
        ]
    },
    {
        "id": "af66b959.f86db8",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "ConstructYearMonth",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 260,
        "wires": []
    },
    {
        "id": "cc962859.3d7cf8",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "ReadWeatherData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "d431fb0f.f51ef8",
        "type": "http response",
        "z": "c8d87243.5b455",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3910,
        "y": 20,
        "wires": []
    },
    {
        "id": "eaf2fb8c.359798",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "TranslateMonth",
        "func": "newMonth = \"\"\n\nswitch (msg.req.params.month) {\n    case \"01\": newMonth = \"Januar\"; break;\n    case \"02\": newMonth = \"Februar\"; break;\n    case \"03\": newMonth = \"Marts\"; break;\n    case \"04\": newMonth = \"April\"; break;\n    case \"05\": newMonth = \"Maj\"; break;\n    case \"06\": newMonth = \"Juni\"; break;\n    case \"07\": newMonth = \"Juli\"; break;\n    case \"08\": newMonth = \"August\"; break;\n    case \"09\": newMonth = \"September\"; break;\n    case \"10\": newMonth = \"Oktober\"; break;\n    case \"11\": newMonth = \"November\"; break;\n    case \"12\": newMonth = \"December\"; break;\n}\n\nmsg.req.params.monthDKString = newMonth\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2840,
        "y": 560,
        "wires": [
            [
                "614520f1.788b2",
                "aee65909.1a9838",
                "2939a5dc.31a41a",
                "4bbfe53a.6dfddc",
                "3e65897b.2f3ac6",
                "cf893fc4.d5d3e",
                "55cc196b.673938",
                "9bed92fd.bcef9",
                "e56e8c63.843eb",
                "a4fe8d50.55605",
                "7de8c9ee.3e75b8"
            ]
        ]
    },
    {
        "id": "2939a5dc.31a41a",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "TranslateMonth",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2840,
        "y": 520,
        "wires": []
    },
    {
        "id": "e95010b9.4bcca",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "PayloadIsNotEmpty",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 260,
        "wires": []
    },
    {
        "id": "4bbfe53a.6dfddc",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "temperature",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/temperature/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3090,
        "y": 820,
        "wires": [
            [
                "d4e6f2c3.30ea4"
            ]
        ]
    },
    {
        "id": "3e65897b.2f3ac6",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "snow",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/snow/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 440,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "cf893fc4.d5d3e",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "lightning",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/lightning/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 480,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "55cc196b.673938",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "drought",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/drought/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 520,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "9bed92fd.bcef9",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "sunhours",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/sunhours/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 560,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "e56e8c63.843eb",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "humidity",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/humidity/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 600,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "a4fe8d50.55605",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "pressure",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/pressure/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3080,
        "y": 640,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "7de8c9ee.3e75b8",
        "type": "http request",
        "z": "c8d87243.5b455",
        "name": "precip",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.dmi.dk/dmidk_obsWS/rest/archive/daily/danmark/precip/Aalborg/{{req.params.year}}/{{req.params.monthDKString}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 680,
        "wires": [
            [
                "34a7eaa1.ba1806"
            ]
        ]
    },
    {
        "id": "ef7a27bb.3a2398",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddcurrentTime",
        "func": "msg.params.currentTimeHumanReadable = new Date();\nmsg.params.currentTime = new Date().getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2360,
        "y": 280,
        "wires": [
            [
                "cc87e5c3.f205e8"
            ]
        ]
    },
    {
        "id": "fed7ebc0.01e078",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddeMaxdate",
        "func": "var maxDate = new Date(0,0,0);\n\nfor (var data of msg.payload.data[0].dataserie) {\n    var currentDate =  new Date(data.timestamp);\n    currentDate.setHours(23, 59, 59);\n    if (maxDate < currentDate) maxDate = currentDate;\n}\n\n\nmsg.params.maxDateHumanReadable = maxDate;\nmsg.params.maxDate = maxDate.getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1560,
        "y": 280,
        "wires": [
            [
                "a80b304e.f0668",
                "50c8964e.b02ff8"
            ]
        ]
    },
    {
        "id": "cb67dabc.2a2198",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "IsMaxDateLastDayOfMonth",
        "property": "params.maxDate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "params.lastDayOfMaxDateMonth",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2100,
        "y": 280,
        "wires": [
            [
                "bc7e4dc.d35e8b",
                "12d09009.d7ca3"
            ],
            [
                "ef7a27bb.3a2398"
            ]
        ]
    },
    {
        "id": "a80b304e.f0668",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddMaxDayOfMonth",
        "func": "var maxDate = msg.params.maxDateHumanReadable;\nvar lastDayOfMonth = new Date(maxDate.getFullYear(), maxDate.getMonth()+1, 0, 23,59.59, 59);\nmsg.params.lastDayOfMaxDateMonthHumanReadable = lastDayOfMonth;\nmsg.params.lastDayOfMaxDateMonth = lastDayOfMonth.getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 280,
        "wires": [
            [
                "cb67dabc.2a2198",
                "69447d60.674404"
            ]
        ]
    },
    {
        "id": "69447d60.674404",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "AddMaxDayOfMonth",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1820,
        "y": 240,
        "wires": []
    },
    {
        "id": "cc87e5c3.f205e8",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "IsMaxDateToday",
        "property": "params.currentTime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "params.maxDate",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2590,
        "y": 280,
        "wires": [
            [
                "6663552d.f4efec",
                "12d09009.d7ca3"
            ],
            [
                "eaf2fb8c.359798"
            ]
        ]
    },
    {
        "id": "bc7e4dc.d35e8b",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MaxDateIsLastDayOfMonth",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 240,
        "wires": []
    },
    {
        "id": "6663552d.f4efec",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "ItIsMaxDateToday",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 240,
        "wires": []
    },
    {
        "id": "2db2b642.64f76a",
        "type": "comment",
        "z": "c8d87243.5b455",
        "name": "Keeping this log",
        "info": "Because it shows how often I need to fetch data and if I fetch the same data a lot. ",
        "x": 4100,
        "y": 340,
        "wires": []
    },
    {
        "id": "c577f3c6.e9379",
        "type": "inject",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 740,
        "wires": [
            [
                "4b6c1c23.3a0404"
            ]
        ]
    },
    {
        "id": "4b6c1c23.3a0404",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "select * from TerasseEvents;",
        "name": "ReadAllHumTempData",
        "x": 440,
        "y": 780,
        "wires": [
            [
                "ea7e5824.c97388",
                "c7d4ad6a.1d199"
            ]
        ]
    },
    {
        "id": "ea7e5824.c97388",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "ReadAllHumTempData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 740,
        "wires": []
    },
    {
        "id": "20296025.2d527",
        "type": "sqlite",
        "z": "ed98a99f.da5ee8",
        "mydb": "48cbe9c.a428418",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE TerasseEvents (\n\tid INTEGER PRIMARY KEY,\n\ttimestamp TEXT NOT NULL,\n\tdescription TEXT NOT NULL\n);",
        "name": "CreateTables",
        "x": 610,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e8eb9425.22a488",
        "type": "inject",
        "z": "ed98a99f.da5ee8",
        "name": "Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "20296025.2d527"
            ]
        ]
    },
    {
        "id": "cc1a274b.d88438",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "eceb6962.a307e8",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "AddYearMonthMap",
        "func": "const yearMonthMap = {}\n\nfor (var terasseEvent of msg.params.terasseEventData) {\n    timestampDate =  new Date(parseInt(terasseEvent.timestamp));\n    year = timestampDate.getFullYear() + \"\";\n    month = ('0' + (timestampDate.getMonth()+1)).slice(-2);\n    yearMonth = year + \"-\" + month;\n    \n    yearMonthMap[yearMonth] = {\n        year:year,\n        month:month\n    };\n    terasseEvent.yearMonth = yearMonth;\n    \n    dateMinusOneYear = new Date(timestampDate);\n    dateMinusOneYear.setMonth(dateMinusOneYear.getMonth() - 1);\n    year1 = dateMinusOneYear.getFullYear() + \"\";\n    month1 = ('0' + (dateMinusOneYear.getMonth()+1)).slice(-2);\n    yearMonth1 = year1 + \"-\" + month1;\n    \n    yearMonthMap[yearMonth1] = {\n        year:year1,\n        month:month1\n    };\n}\n\nmsg.params.yearMonthMap = yearMonthMap;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 780,
        "wires": [
            [
                "be5095e5.dd70e8",
                "ece5f92a.0e14d8"
            ]
        ]
    },
    {
        "id": "be5095e5.dd70e8",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "AddYearMonthMap",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 740,
        "wires": []
    },
    {
        "id": "c7d4ad6a.1d199",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "InitialiseParams",
        "func": "msg.params = {\n    terasseEventData:msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 780,
        "wires": [
            [
                "eceb6962.a307e8"
            ]
        ]
    },
    {
        "id": "5e4b7441.3b217c",
        "type": "split",
        "z": "ed98a99f.da5ee8",
        "name": "SplitPayload",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1530,
        "y": 780,
        "wires": [
            [
                "e8ce4818.2111c8",
                "5ded848e.869bdc"
            ]
        ]
    },
    {
        "id": "ece5f92a.0e14d8",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "ReplacePayloadWithYearMonthMap",
        "func": "msg.payload = Object.values(msg.params.yearMonthMap);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 780,
        "wires": [
            [
                "5e4b7441.3b217c",
                "8d9c5934.5e4078"
            ]
        ]
    },
    {
        "id": "8d9c5934.5e4078",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "ReplacePayloadWithYearMonthMap",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 740,
        "wires": []
    },
    {
        "id": "5ded848e.869bdc",
        "type": "http request",
        "z": "ed98a99f.da5ee8",
        "name": "FetchWeatherData",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/WeatherInMonth/{{payload.year}}/{{payload.month}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1750,
        "y": 780,
        "wires": [
            [
                "9fbf3900.c2eec8",
                "4918d61.f3b0828"
            ]
        ]
    },
    {
        "id": "9fbf3900.c2eec8",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "FetchWeatherData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 740,
        "wires": []
    },
    {
        "id": "4918d61.f3b0828",
        "type": "join",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1950,
        "y": 780,
        "wires": [
            [
                "52683df9.b4f844",
                "cbf9329.8b08bd"
            ]
        ]
    },
    {
        "id": "52683df9.b4f844",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "Join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 740,
        "wires": []
    },
    {
        "id": "cbf9329.8b08bd",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "FillYearMonthMap",
        "func": "for (var weatherDataMonth of msg.payload) {\n    msg.params.yearMonthMap[weatherDataMonth.yearmonth] = \n        weatherDataMonth.data;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2150,
        "y": 780,
        "wires": [
            [
                "b63629e7.65b6e8",
                "6a0ede7d.25d25"
            ]
        ]
    },
    {
        "id": "b63629e7.65b6e8",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "FillYearMonthMap",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2150,
        "y": 740,
        "wires": []
    },
    {
        "id": "6a0ede7d.25d25",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "PrepareResponse",
        "func": "msg.payload = {\n    terasseEventData: msg.params.terasseEventData,\n    yearMonthMap: msg.params.yearMonthMap\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2410,
        "y": 780,
        "wires": [
            [
                "ebf03a67.e71a38",
                "b9ea0d16.4d215"
            ]
        ]
    },
    {
        "id": "ebf03a67.e71a38",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "PrepareResponse",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 740,
        "wires": []
    },
    {
        "id": "9b5e530e.f84cd",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "join",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3450,
        "y": 340,
        "wires": []
    },
    {
        "id": "10990da9.dc23f2",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddYearMonth",
        "func": "timestampDate =  new Date(parseInt(msg.payload.data[0].dataserie[0].timestamp));\nyear = timestampDate.getFullYear() + \"\";\nmonth = ('0' + (timestampDate.getMonth()+1)).slice(-2);\nyearMonth = year + \"-\" + month;\n\nmsg.payload.yearMonth = yearMonth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3900,
        "y": 420,
        "wires": [
            [
                "90972875.110a78"
            ]
        ]
    },
    {
        "id": "90972875.110a78",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "AddTimestamp",
        "func": "msg.payload.timestamp = new Date().getTime();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4100,
        "y": 420,
        "wires": [
            [
                "cac33495.445fd8",
                "f378a6e9.d52448",
                "12d09009.d7ca3"
            ]
        ]
    },
    {
        "id": "f378a6e9.d52448",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "FetchedDataReady",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4110,
        "y": 380,
        "wires": []
    },
    {
        "id": "4024f3d5.9c894c",
        "type": "function",
        "z": "c8d87243.5b455",
        "name": "MapToJson",
        "func": "msg.payload = msg.payload[0];\nmsg.payload.data = JSON.parse(msg.payload.data);\nmsg.payload.timestamp = parseInt(msg.payload.timestamp);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1310,
        "y": 280,
        "wires": [
            [
                "fed7ebc0.01e078",
                "9ffecccd.5b613"
            ]
        ]
    },
    {
        "id": "9ffecccd.5b613",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "MapToJson",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "50c8964e.b02ff8",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "AddeMaxdate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 240,
        "wires": []
    },
    {
        "id": "1478120e.81bf9e",
        "type": "template",
        "z": "c8d87243.5b455",
        "name": "req.params",
        "field": "req.params",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n    \"month\":\"02\",\n    \"year\":\"2021\"\n}",
        "output": "json",
        "x": 310,
        "y": 240,
        "wires": [
            [
                "a9add6a3.57bc98"
            ]
        ]
    },
    {
        "id": "e378080b.977338",
        "type": "link in",
        "z": "c8d87243.5b455",
        "name": "WeatherInfoIn",
        "links": [
            "73d71c7a.359884"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "a9add6a3.57bc98",
                "b029a535.a0c358"
            ]
        ]
    },
    {
        "id": "7ddfe60f.7be0a8",
        "type": "comment",
        "z": "c8d87243.5b455",
        "name": "",
        "info": "req.params = {\n    \"month\":\"02\",\n    \"year\":\"2021\"\n}",
        "x": 110,
        "y": 640,
        "wires": []
    },
    {
        "id": "a15d7ecd.681e8",
        "type": "link out",
        "z": "c8d87243.5b455",
        "name": "WeatherInfoOut",
        "links": [
            "f93efb3.9690908"
        ],
        "x": 4065,
        "y": 80,
        "wires": []
    },
    {
        "id": "12d09009.d7ca3",
        "type": "switch",
        "z": "c8d87243.5b455",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3670,
        "y": 60,
        "wires": [
            [
                "d431fb0f.f51ef8"
            ]
        ]
    },
    {
        "id": "f93efb3.9690908",
        "type": "link in",
        "z": "ed98a99f.da5ee8",
        "name": "TerasseEventToWeatherInfoIn",
        "links": [
            "a15d7ecd.681e8"
        ],
        "x": 1835,
        "y": 960,
        "wires": [
            [
                "b003527f.59184",
                "2d2f52a3.0f057e"
            ]
        ]
    },
    {
        "id": "73d71c7a.359884",
        "type": "link out",
        "z": "ed98a99f.da5ee8",
        "name": "TerasseEventToWeatherInfoOut",
        "links": [
            "e378080b.977338"
        ],
        "x": 1835,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9e2f8058.41fd6",
        "type": "function",
        "z": "ed98a99f.da5ee8",
        "name": "MapToLInk",
        "func": "msg.req = {\n    params : {\n        month:msg.payload.month,\n        year:msg.payload.year\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1730,
        "y": 1020,
        "wires": [
            [
                "73d71c7a.359884",
                "587bb49.167894c"
            ]
        ]
    },
    {
        "id": "587bb49.167894c",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "MapToLInk",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 980,
        "wires": []
    },
    {
        "id": "b029a535.a0c358",
        "type": "debug",
        "z": "c8d87243.5b455",
        "name": "WeatherInfoIn",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.params",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 580,
        "wires": []
    },
    {
        "id": "e8ce4818.2111c8",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "SplitPayload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 740,
        "wires": []
    },
    {
        "id": "b003527f.59184",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "TerasseEventToWeatherInfoIn",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2d2f52a3.0f057e",
        "type": "debug",
        "z": "ed98a99f.da5ee8",
        "name": "TerasseEventToWeatherInfoIn",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "parts",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2d612f04.c5a82",
        "type": "ui_button",
        "z": "5d962ba5.9b5bc4",
        "name": "Testing",
        "group": "dd0b04aa.9ebc28",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2144df05.5661d",
        "type": "http in",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "url": "/TerasseEventsAndWeatherInfo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "4b6c1c23.3a0404"
            ]
        ]
    },
    {
        "id": "b9ea0d16.4d215",
        "type": "http response",
        "z": "ed98a99f.da5ee8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2630,
        "y": 840,
        "wires": []
    },
    {
        "id": "f45d6b2.468c498",
        "type": "http request",
        "z": "3dfdec7a.a1b244",
        "name": "/TerasseEventsAndWeatherInfo",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/TerasseEventsAndWeatherInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 480,
        "y": 300,
        "wires": [
            [
                "17ae9d7a.6eea23",
                "b778b3ae.b9e46",
                "2ac2f70c.4567a8",
                "12afa6b7.9ed9f9",
                "ad50239b.7622c"
            ]
        ]
    },
    {
        "id": "17ae9d7a.6eea23",
        "type": "debug",
        "z": "3dfdec7a.a1b244",
        "name": "/TerasseEventsAndWeatherInfo",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 260,
        "wires": []
    },
    {
        "id": "adc4dd2.ffffd2",
        "type": "ui_ui_control",
        "z": "3dfdec7a.a1b244",
        "name": "TriggerAtLoad",
        "events": "all",
        "x": 300,
        "y": 420,
        "wires": [
            [
                "f45d6b2.468c498",
                "3103f640.eb10ea"
            ]
        ]
    },
    {
        "id": "ac6e573a.cd60e8",
        "type": "ui_table",
        "z": "3dfdec7a.a1b244",
        "group": "17d43085.90b03f",
        "name": "terasseEventData",
        "order": 2,
        "width": "0",
        "height": "0",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1170,
        "y": 200,
        "wires": []
    },
    {
        "id": "b778b3ae.b9e46",
        "type": "function",
        "z": "3dfdec7a.a1b244",
        "name": "terasseEventDataPRep",
        "func": "msg.payload = msg.payload.terasseEventData;\n\nfor (var row of msg.payload) {\n    row.humanreadabletimestamp = new Date(parseInt(row.timestamp));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 200,
        "wires": [
            [
                "ac6e573a.cd60e8"
            ]
        ]
    },
    {
        "id": "9e310660.025618",
        "type": "ui_text",
        "z": "3dfdec7a.a1b244",
        "group": "17d43085.90b03f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "TerasseEvents",
        "label": "TerasseEvents",
        "format": "",
        "layout": "row-spread",
        "x": 1160,
        "y": 140,
        "wires": []
    },
    {
        "id": "cd039241.13e43",
        "type": "ui_text",
        "z": "3dfdec7a.a1b244",
        "group": "17d43085.90b03f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Weather Data",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1160,
        "y": 360,
        "wires": []
    },
    {
        "id": "5902cbfd.41f2a4",
        "type": "ui_dropdown",
        "z": "3dfdec7a.a1b244",
        "name": "Pick Dataset",
        "label": "Pick Dataset",
        "tooltip": "",
        "place": "Select option",
        "group": "17d43085.90b03f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 520,
        "wires": [
            [
                "121d75d4.b3e7ba",
                "6c7176f0.582088"
            ]
        ]
    },
    {
        "id": "2ac2f70c.4567a8",
        "type": "function",
        "z": "3dfdec7a.a1b244",
        "name": "PrepareDropdown",
        "func": "msg.options = [];\nyearMonthMap = msg.payload.yearMonthMap;\n\nfor (var datasets of yearMonthMap[Object.keys(yearMonthMap)[0]]) {\n    msg.options.push(datasets.parameter);\n}\n\nmsg.payload = flow.get(\"datasetParameter\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 520,
        "wires": [
            [
                "dacf1cc.418f1e",
                "5902cbfd.41f2a4"
            ]
        ]
    },
    {
        "id": "dacf1cc.418f1e",
        "type": "debug",
        "z": "3dfdec7a.a1b244",
        "name": "PrepareDropdown",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "121d75d4.b3e7ba",
        "type": "debug",
        "z": "3dfdec7a.a1b244",
        "name": "Pick Dataset",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 480,
        "wires": []
    },
    {
        "id": "12afa6b7.9ed9f9",
        "type": "function",
        "z": "3dfdec7a.a1b244",
        "name": "PrepareyYearMonth",
        "func": "msg.options = Object.keys(msg.payload.yearMonthMap);\nmsg.payload = flow.get(\"datasetYearMonth\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "9c3870a6.62d6f"
            ]
        ]
    },
    {
        "id": "9c3870a6.62d6f",
        "type": "ui_dropdown",
        "z": "3dfdec7a.a1b244",
        "name": "PickYearMonth",
        "label": "Pick YearMonth",
        "tooltip": "",
        "place": "Select option",
        "group": "17d43085.90b03f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1080,
        "y": 600,
        "wires": [
            [
                "d5800d2c.10619",
                "751d1c51.911c64"
            ]
        ]
    },
    {
        "id": "d5800d2c.10619",
        "type": "debug",
        "z": "3dfdec7a.a1b244",
        "name": "PickYearMonth",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 560,
        "wires": []
    },
    {
        "id": "d2ad066b.bac498",
        "type": "ui_table",
        "z": "3dfdec7a.a1b244",
        "group": "17d43085.90b03f",
        "name": "WeatherData",
        "order": 8,
        "width": "0",
        "height": "0",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 2250,
        "y": 640,
        "wires": []
    },
    {
        "id": "38f59d88.f8d7f2",
        "type": "function",
        "z": "3dfdec7a.a1b244",
        "name": "FetchData",
        "func": "datasetParameter = flow.get(\"datasetParameter\");\nif(!datasetParameter){\n  node.warn(\"datasetParameter is empty\");\n  return null;// halt flow / don't pass msg to next node\n}\n\ndatasetYearMonth = flow.get(\"datasetYearMonth\");\nif(!datasetYearMonth){\n  node.warn(\"datasetYearMonth is empty\");\n  return null;// halt flow / don't pass msg to next node\n}\n\nweatherdata = flow.get(\"weatherdata\");\nif(!weatherdata){\n  node.warn(\"weatherdata is empty\");\n  return null;// halt flow / don't pass msg to next node\n}\n\nmsg.payload = {\n    datasetParameter : datasetParameter,\n    datasetYearMonth : datasetYearMonth,\n    weatherdata : weatherdata,\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1630,
        "y": 580,
        "wires": [
            [
                "25524984.76ce26",
                "2b06b4ea.be040c"
            ]
        ]
    },
    {
        "id": "25524984.76ce26",
        "type": "debug",
        "z": "3dfdec7a.a1b244",
        "name": "FetchData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 540,
        "wires": []
    },
    {
        "id": "fadc9fd2.efd73",
        "type": "ui_text",
        "z": "3dfdec7a.a1b244",
        "group": "17d43085.90b03f",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Unit",
        "label": "Unit",
        "format": "{{msg.params.unit}}",
        "layout": "row-left",
        "x": 2230,
        "y": 580,
        "wires": []
    },
    {
        "id": "3103f640.eb10ea",
        "type": "function",
        "z": "3dfdec7a.a1b244",
        "name": "ResetWeatherData",
        "func": "msg.payload = \"\";\nmsg.params.unit = \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 480,
        "wires": [
            [
                "d2ad066b.bac498",
                "fadc9fd2.efd73"
            ]
        ]
    },
    {
        "id": "6c7176f0.582088",
        "type": "change",
        "z": "3dfdec7a.a1b244",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datasetParameter",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 520,
        "wires": [
            [
                "38f59d88.f8d7f2"
            ]
        ]
    },
    {
        "id": "751d1c51.911c64",
        "type": "change",
        "z": "3dfdec7a.a1b244",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datasetYearMonth",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 600,
        "wires": [
            [
                "38f59d88.f8d7f2"
            ]
        ]
    },
    {
        "id": "ad50239b.7622c",
        "type": "change",
        "z": "3dfdec7a.a1b244",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "weatherdata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 400,
        "wires": [
            [
                "38f59d88.f8d7f2"
            ]
        ]
    },
    {
        "id": "2b06b4ea.be040c",
        "type": "function",
        "z": "3dfdec7a.a1b244",
        "name": "PrepareData",
        "func": "yearMonthDataset = msg.payload.weatherdata.yearMonthMap[msg.payload.datasetYearMonth];\n\n\nfor (var data of yearMonthDataset) {\n    if (data.parameter.localeCompare(msg.payload.datasetParameter) == 0) {\n        //node.warn(data);\n        //node.warn(msg.payload.datasetParameter);\n        msg.payload = data.dataserie;\n        msg.params = {\n            unit: !data.unit ? \"N/A\" : data.unit\n        }\n        break;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1940,
        "y": 580,
        "wires": [
            [
                "d2ad066b.bac498",
                "8491956d.54f018",
                "fadc9fd2.efd73"
            ]
        ]
    },
    {
        "id": "8491956d.54f018",
        "type": "debug",
        "z": "3dfdec7a.a1b244",
        "name": "PrepareData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 540,
        "wires": []
    }
]